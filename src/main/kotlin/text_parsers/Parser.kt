package org.example.text_parsers

import org.example.data_classes.Sentence

/**
 * Интерфейс для парсинга текста на предложения.
 *
 * Определяет контракт для классов, которые реализуют различные алгоритмы
 * разбиения текста на отдельные предложения. Позволяет использовать разные
 * стратегии парсинга в зависимости от языка, формата текста или конкретных требований.
 *
 * @see Sentence для информации о структуре предложения
 */
interface Parser {
    /**
     * Разбивает текст на список предложений.
     *
     * Реализации этого метода должны анализировать входной текст и определять
     * границы предложений согласно правилам конкретного языка или формата.
     *
     * @param text исходный текст для парсинга. Может быть пустой строкой.
     * @return список объектов [Sentence], представляющих выделенные из текста предложения.
     *         Возвращает пустой список, если текст пустой или не содержит предложений.
     *
     * @throws TextParsingException если возникли ошибки при анализе текста
     *
     * @example
     * ```
     * val parser: Parser = SimpleSentenceParser()
     * val text = "Первое предложение. Второе предложение! Третье предложение?"
     * val sentences = parser.parse(text)
     * // sentences.size == 3
     * ```
     */
    fun parse(text: String): List<Sentence>
}